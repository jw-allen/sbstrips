<?xml version="1.0" encoding="UTF-8"?>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ Documentation for the SBStrips package of GAP, written by Joe Allen as part +
+ of his PhD thesis.                                                          +
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

<!DOCTYPE Book SYSTEM "gapdoc.dtd"
  [ <!ENTITY fail "<C>fail</C>">
    <!ENTITY false "<C>false</C>">
    <!ENTITY QPA "<Package>QPA</Package>">
    <!ENTITY SBStrips "<Package>SBStrips</Package>"> 
    <!ENTITY true "<C>true</C>">
    ]
  >

<Book Name="SBStrips">
  
  <TitlePage>
    <Title>
      <Package>SBStrips</Package>
    </Title>

    <Subtitle>
      discrete models of special biserial algebras, string modules and their
      syzygies
    </Subtitle>
    
    <Version>
      version 0.6.0
    </Version>
    
    <Author>
      Joe Allen
    </Author>
    
    <Copyright>
      Joe Allen &copyright; 2020
    </Copyright>
  </TitlePage>
  
  <TableOfContents/>
  
  <Body>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ CHAP: Introduction                                                          +
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <Chapter>
      <Heading>Introduction</Heading>
      
<!-- SEC: Why "strips", not "strings"? ++++++++++++++++++++++++++++++++++++ -->
      <Section>
        <Heading>Why "strips", not "strings"?</Heading>
      </Section>

      First, some context. Representation theorists use the word <E>string</E>
      to mean a decorated graph that, in a particular fashion, describes a
      module; it is accordingly called a <E>string module</E>. Liu and Morin
      <Cite Key="LM04"/> showed that the syzygy of a string module over a
      special biserial (SB) algebra is a direct sum of string modules. Their
      proof is constructive, detailing how to obtain the strings indexing the
      syzygy summands from the string indexing the original module. Their
      language explains how to spot patterns appearing "from one syzygy to the
      next", but it does not scale in a particularly transparent way. For
      example, I believe it does not lend itself to clearly seeing asymptotic
      behaviour of syzygies of string modules. My research has aimed, in part,
      to provide a more robust language: one which lays bare more patterns in
      the syzygies of string modules over SB algebras.
      <P />

      One key ingredient is a slight refinement of the definition of a string.
      Really, this differs from the established definition only in technical
      ways, the effect being to disambiguate how the graph is decorated so that
      the syzygy calculation is streamlined. In my thesis, I propose the term
      <E>strip</E> for this refined notion of a string. A happy side-effect of
      this name change is that it avoids the clash with what &GAP; already
      thinks "string" means.
      <P />

      <E>
        In brief: if whenever you read the word "strip" here, you imagine that
        it means the kind of decorated graph that representation theorists call
        a "string", then you won't go too far wrong.
      </E>
      <P />
      
      <Section>
        <Heading>Aims</Heading>
        
        
      </Section>
      
      <Section>
        <Heading>Installation</Heading>
      </Section>
    </Chapter>


<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ CHAP: Worked example                                                        +
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <Chapter>
      <Heading>Worked example</Heading>

<!-- SEC: Strips ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
      <Section>
        <Heading>Strips, aka "strings for special biserial algebras"</Heading>
      </Section>
      
<!-- SEC: Calculations with strips ++++++++++++++++++++++++++++++++++++++++ -->
      <Section>
        <Heading>Calculations with strips</Heading>
      </Section>
      
<!-- SEC: A look under the bonnet +++++++++++++++++++++++++++++++++++++++++ -->
      <Section>
        <Heading>A look under the bonnet</Heading>
      </Section>
    </Chapter>


<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ CHAP: Quivers and special biserial algebras                                 +
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <Chapter>
      <Heading>Quivers and special biserial algebras</Heading>
      
      <Section>
        <Heading>Introduction</Heading>

        Quivers are finite directed graphs. Paths in a given quiver <M>Q</M>
        can be concatenated in an obvious way, and this concatenation can be
        extended <M>K</M>-linearly (over a field <M>K</M>) to give an
        associative, unital algebra <M>KQ</M> called a <E>path algebra</E>. A
        path algebra is infinite-dimensional iff its underlying quiver <M>Q</M>
        is acyclic. Finite-dimensional <E>quiver algebras</E> -- that is,
        finite-dimensional quotient algebras <M>KQ/I</M> of a path algebra
        <M>KQ</M> by some (frequently admissible) ideal <M>I</M> -- are a very
        important class of rings, whose representation theory has been much
        studied.
        <P/>

        The excellent &QPA; package implements these objects in &GAP;. The (far
        more humdrum) &SBStrips; package extends &QPA;'s functionality. Quivers
        constructed using the &QPA; function <Ref Func="Quiver"
        BookName="QPA"/> belong to the filter <Ref Filt="IsQuiver"
        BookName="QPA"/>, and special biserial algebras are those quiver
        algebras for which the property <Ref Prop="IsSpecialBiserialAlgebra"
        BookName="QPA"/> returns &true;.
        <P/>
        
        In this section, we explain some added functionality for quivers and
        special biserial algebras.<P/>
      </Section>
      
      <Section>
        <Heading>New property of quivers</Heading>
        
        <#Include Label="DocIs1RegQuiver">
      </Section>
      
      <Section>
        <Heading>New attributes of quivers</Heading>
        
        <#Include Label="Doc1RegQuivIntActionFunction">
        
        <#Include Label="Doc1RegQuivIntAct">
      </Section>
      
      <Section>
        <Heading>Operations on vertices and arrows of quivers</Heading>
        
        <#Include Label="Doc1RegQuivIntAct">
          
        <#Include Label="DocPathBySourceAndLength">
          
        <#Include Label="DocPathByTargetAndLength">
      </Section>
      
      <Section>
        <Heading>Attributes for special biserial algebras</Heading>
      </Section>
    </Chapter>
    

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ CHAP: Permissible data                                                      +
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <Chapter>
      <Heading>Permissible data</Heading>
    </Chapter>


<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ CHAP: Syllables                                                             +
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <Chapter>
      <Heading>Syllables</Heading>
    </Chapter>
    

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ CHAP: Patches                                                               +
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <Chapter>
      <Heading>Patches</Heading>
    </Chapter>


<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ CHAP: Strips                                                                +
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <Chapter>
      <Heading>Strips</Heading>
      
<!-- SEC: Introduction ++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
      <Section>
        <Heading>Introduction</Heading>
      </Section>
      
      <Section>
        <Heading>
          Constructing strips
        </Heading>
      </Section>
    </Chapter>
  </Body>
  
  <Bibliography Databases="sbstripsbib.bib" Style="Alpha" />
  
  <TheIndex/>

<!--                                                                        -->

</Book>
